Index: HlsPlayer.cpp
--- HlsPlayer.cpp	(revision b0beea77819ef701ebba13aa2f18fe83dcb47509)
+++ HlsPlayer.cpp	(date 1654051221181)
@@ -378,18 +378,22 @@
 }
 
 void HlsPlayerImp::onShutdown(const SockException &ex) {
-    if (_demuxer) {
-        std::weak_ptr<HlsPlayerImp> weak_self = static_pointer_cast<HlsPlayerImp>(shared_from_this());
-        static_pointer_cast<HlsDemuxer>(_demuxer)->pushTask([weak_self, ex]() {
-            auto strong_self = weak_self.lock();
-            if (strong_self) {
-                strong_self->_demuxer = nullptr;
-                strong_self->onShutdown(ex);
-            }
-        });
-    } else {
-        PlayerImp<HlsPlayer, PlayerBase>::onShutdown(ex);
-    }
+    while (_demuxer) {
+        try {
+            std::weak_ptr<HlsPlayerImp> weak_self = static_pointer_cast<HlsPlayerImp>(shared_from_this());
+            static_pointer_cast<HlsDemuxer>(_demuxer)->pushTask([weak_self, ex]() {
+                auto strong_self = weak_self.lock();
+                if (strong_self) {
+                    strong_self->_demuxer = nullptr;
+                    strong_self->onShutdown(ex);
+                }
+            });
+            return;
+        } catch (...) {
+            break;
+        }
+    }
+    PlayerImp<HlsPlayer, PlayerBase>::onShutdown(ex);
 }
 
 vector<Track::Ptr> HlsPlayerImp::getTracks(bool ready) const {
Index: TsplayerImp.cpp
--- TsplayerImp.cpp	(revision b0beea77819ef701ebba13aa2f18fe83dcb47509)
+++ TsplayerImp.cpp	(date 1654051221184)
@@ -45,18 +45,22 @@
 }
 
 void TsPlayerImp::onShutdown(const SockException &ex) {
-    if (_demuxer) {
-        std::weak_ptr<TsPlayerImp> weak_self = static_pointer_cast<TsPlayerImp>(shared_from_this());
-        static_pointer_cast<HlsDemuxer>(_demuxer)->pushTask([weak_self, ex]() {
-            auto strong_self = weak_self.lock();
-            if (strong_self) {
-                strong_self->_demuxer = nullptr;
-                strong_self->onShutdown(ex);
-            }
-        });
-    } else {
-        PlayerImp<TsPlayer, PlayerBase>::onShutdown(ex);
-    }
+    while (_demuxer) {
+        try {
+            std::weak_ptr<TsPlayerImp> weak_self = static_pointer_cast<TsPlayerImp>(shared_from_this());
+            static_pointer_cast<HlsDemuxer>(_demuxer)->pushTask([weak_self, ex]() {
+                auto strong_self = weak_self.lock();
+                if (strong_self) {
+                    strong_self->_demuxer = nullptr;
+                    strong_self->onShutdown(ex);
+                }
+            });
+            return;
+        } catch (...) {
+            break;
+        }
+    }
+    PlayerImp<TsPlayer, PlayerBase>::onShutdown(ex);
 }
 
 vector<Track::Ptr> TsPlayerImp::getTracks(bool ready) const {
